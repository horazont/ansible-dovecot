### MANAGED BY ANSIBLE ###
{% macro userdb_ldap(userdb, caller) -%}
userdb {
    driver = ldap
    args = {{ userdb.file }}

{% if (userdb.userdb_settings | default({})).default_fields | default(False) %}
    default_fields = {{ userdb.userdb_settings.default_fields | join(" ") }}
{% endif %}
}
{% endmacro -%}
{% macro userdb_pam(userdb, caller) -%}
userdb {
    driver = passwd
}
{% endmacro -%}

{% macro passdb_ldap(userdb, caller) -%}
passdb {
    driver = ldap
    args = {{ userdb.file }}

{% if (userdb.passdb_settings | default({})).override_fields | default(False) %}
    override_fields = {{ userdb.passdb_settings.override_fields | join(" ") }}
{% endif %}
}
{% endmacro -%}
{% macro passdb_pam(userdb, caller) -%}
passdb {
    driver = pam
}
{% endmacro -%}

# Enable installed protocols
!include_try /usr/share/dovecot/protocols.d/*.protocol

{% if dovecot_login_greeting -%}
# origin: dovecot_login_greeting
login_greeting = {{ dovecot_login_greeting }}
{% endif %}

{% for userdb in dovecot_userdb %}
# origin: dovecot_userdb
{% if userdb.driver == "ldap" %}{% call userdb_ldap(userdb) %}{% endcall -%}
{% elif userdb.driver == "pam" %}{% call userdb_pam(userdb) %}{% endcall -%}
{% else -%}
{% call userdb_driver_not_known_check_what_driver_you_are_using() %}{% endcall -%}
{% endif %}
{% endfor %}

{% for passdb in dovecot_passdb %}
# origin: dovecot_passdb
{% if passdb.driver == "ldap" %}{% call passdb_ldap(passdb) %}{% endcall -%}
{% elif passdb.driver == "pam" %}{% call passdb_pam(passdb) %}{% endcall -%}
{% else -%}
{% call passdb_driver_not_known_check_what_driver_you_are_using() %}{% endcall -%}
{% endif %}
{% endfor %}

# origin: dovecot_mail_location
mail_location = {{ dovecot_mail_location }}

{% if dovecot_replication %}
# --- BEGIN OF dovecot_replication ---
mail_plugins = $mail_plugins notify replication

service aggregator {
  fifo_listener replication-notify-fifo {
    user = root
    group = mail
    mode = 0666
  }
  unix_listener replication-notify {
    user = root
    group = mail
    mode = 0666
  }
}

service replicator {
  unix_listener replicator-doveadm {
    mode = 0666
  }
  process_min_avail = 1
}

service doveadm {
  inet_listener {
    # origin: dovecot_doveadm_port
    port = {{ dovecot_doveadm_port }}
    # origin: dovecot_doveadm_listen
    address = {{ dovecot_doveadm_listen | join(", ") }}
  }
}

plugin {
  # origin: dovecot_replication_peer, dovecot_doveadm_port
  mail_replica = tcp:{{ dovecot_replication_peer }}:{{ dovecot_doveadm_port }}
}

# origin: dovecot_doveadm_secret
doveadm_password = {{ dovecot_doveadm_secret }}
# --- END OF dovecot_replication ---
{% endif %}

{% if dovecot_quota %}
# --- BEGIN OF dovecot_quota ---
mail_plugins = $mail_plugins quota

plugin {
  quota = maildir:User quota
  quota_rule = *:storage={{ dovecot_quota_bytes_default }}
  quota_grace = 10%%
}

{% if dovecot_quota_service %}
# --- BEGIN OF dovecot_quota_service ---
service quota-status {
    executable = quota-status -p postfix
    unix_listener /var/spool/postfix/private/dovecot-quota-status {
        user = postfix
        group = postfix
        mode = 0600
    }
    client_limit = 1
}

plugin {
    quota_grace = 10%%
    # 10% is the default
    quota_status_success = DUNNO
    quota_status_nouser = DUNNO
    quota_status_overquota = "552 5.2.2 Mailbox is full"
}
# --- END OF dovecot_quota_service ---
{% endif %}

# --- END OF dovecot_quota ---
{% endif %}

namespace inbox {
  inbox = yes

  mailbox Drafts {
    special_use = \Drafts
    auto = subscribe
  }
  mailbox Junk {
    special_use = \Junk
    auto = subscribe
  }
  mailbox Trash {
    special_use = \Trash
    auto = subscribe
  }
  mailbox Sent {
    special_use = \Sent
    auto = subscribe
  }
  mailbox "Sent Messages" {
    special_use = \Sent
  }
}

service imap-login {
  inet_listener imap {
    port = 143
    # origin: dovecot_listen
    address = {{ dovecot_listen | join(", ") }}
  }

  # --- BEGIN OF dovecot_imaps ---
{% if dovecot_imaps %}
  inet_listener imaps {
    port = 993
    # origin: dovecot_listen
    address = {{ dovecot_listen | join(", ") }}
  }
{% else %}
  inet_listener imaps {
    port = 0
  }
{% endif %}
  # --- END OF dovecot_imaps ---
}

service imap {
}

auth_mechanisms = plain login

service auth {
  unix_listener auth-userdb {
  }

{% if dovecot_postfix_sasl_socket %}
  # --- BEGIN OF dovecot_postfix_sasl_socket ---
  unix_listener /var/spool/postfix/private/auth {
    mode = 0666
  }
  # --- END of dovecot_postfix_sasl_socket ---
{% endif %}
}

service auth-worker {
}

ssl = yes
ssl_cert = </etc/dovecot/ssl.crt
ssl_key = </etc/dovecot/ssl.key
ssl_protocols = !SSLv3 {% if ansible_os_family == 'Debian' and (ansible_distribution_version | int <= 8) %}!SSLv2{% endif %}

ssl_cipher_list = EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA
ssl_prefer_server_ciphers = yes
ssl_dh_parameters_length = 2048

protocol lda {
  {% if dovecot_sieve %}
  # origin: dovecot_sieve
  mail_plugins = $mail_plugins sieve
  {% endif %}
}

{% if dovecot_lmtp %}
# --- BEGIN OF dovecot_lmtp ---
service lmtp {
  unix_listener /var/spool/postfix/private/dovecot-lmtp {
    user = postfix
    group = postfix
    mode = 0600
  }

  user = vmail

  process_min_avail = 10
}

protocol lmtp {
  # origin: dovecot_sieve
  {% if dovecot_sieve %}
  mail_plugins = $mail_plugins sieve
  {% endif %}

  postmaster_address = postmaster@zombofant.net
}
# --- END OF dovecot_lmtp ---
{% endif %}

protocol imap {
  # origin: dovecot_antispam, dovecot_quota
  mail_plugins = $mail_plugins{% if dovecot_antispam %} antispam{% endif %}{% if dovecot_quota %} imap_quota{% endif %}

}

{% if dovecot_sieve %}
# --- BEGIN OF dovecot_sieve ---
{% if dovecot_managesieve %}
# --- BEGIN OF dovecot_managesieve ---
protocols = $protocols sieve

service managesieve-login {
  inet_listener sieve {
    # origin: dovecot_listen
    address = {{ dovecot_listen | join(", ") }}
    port = 4190
  }

  # Number of connections to handle before starting a new process. Typically
  # the only useful values are 0 (unlimited) or 1. 1 is more secure, but 0
  # is faster. <doc/wiki/LoginProcess.txt>
  #service_count = 1

  # Number of processes to always keep waiting for more connections.
  #process_min_avail = 0

  # If you set service_count=0, you probably need to grow this.
  #vsz_limit = 64M
}

service managesieve {
  # Max. number of ManageSieve processes (connections)
  #process_limit = 1024
}

protocol sieve {
}
# --- END OF dovecot_managesieve ---
{% endif %}


plugin {
  # origin: dovecot_sieve_file
  sieve = {{ dovecot_sieve_file }}
  # origin: dovecot_sieve_dir
  sieve_dir = {{ dovecot_sieve_dir }}

  sieve_global = /usr/local/share/sieve/
  sieve_default = /usr/local/share/sieve/default.sieve
  sieve_default_name = 00-master

  sieve_extensions = -reject -environment +spamtest
}
# --- END OF dovecot_sieve ---
{% endif %}


{% if dovecot_debug %}
# --- BEGIN OF dovecot_debug ---
mail_debug = yes
auth_debug = yes
# --- END OF dovecot_debug ---
{% endif %}

{% if dovecot_antispam %}
# --- BEGIN OF dovecot_antispam ---
plugin {
   antispam_backend = mailtrain
   antispam_mail_sendmail = /usr/local/bin/sa-learn-stdin.sh
   antispam_mail_spam = spam
   antispam_mail_notspam = ham
   antispam_mail_sendmail_args = -L
   antispam_spam = Junk;INBOX.Junk
   antispam_trash = Trash;INBOX.Trash
   antispam_allow_append_to_spam = no
   antispam_spam_flags = "Junk;$JUNK"
   antispam_ham_flags = "$NOTJUNK"
}
# --- END OF dovecot_antispam ---
{% endif %}
